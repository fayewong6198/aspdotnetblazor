
@using System.Linq.Expressions
@using System
@inject IJSRuntime JS

@using System.Net.Http
@inject HttpClient Http
@using System.Net.Http.Json

@inject IConfiguration Configuration


<div class="div-content-editable" style="width: 100%"  id="@Id" contenteditable="true" @onblur="e => UpdateFeed()"> @((MarkupString)InitValue)  </div>


@code {
    private string CurrentValue = "";
    public string InitValue {get;set;}

    [Parameter]
    public FeedItem feedItem {get;set;}
    public string Id =  Guid.NewGuid().ToString();

     protected override void OnInitialized()
    {
        InitValue = feedItem.Data;
    }


    private async Task UpdateFeed()
    {
        string text = new(await JS.InvokeAsync<string>("getInnerHtml", this.Id));
        feedItem.Data = text;
        
        var requestMessage = new HttpRequestMessage()
        {
            Method = new HttpMethod("PUT"),
            RequestUri = new Uri($"{Configuration["API"]}/api/feeditems/{feedItem.Id}"),
            Content =
                JsonContent.Create(feedItem)
        };

        var token = "";

        requestMessage.Content.Headers.TryAddWithoutValidation(
            "token", token);

        var res = await Http.SendAsync(requestMessage);
    }
 
}